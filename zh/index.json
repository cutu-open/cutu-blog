[{"uri":"https://cutu-open.github.io/cutu-blog/zh/","title":"AaronJiang","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/","title":"Categories","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/mongodb/","title":"MongoDB","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/mongodb/","title":"MongoDB","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/install/","title":"MongoDB安装","tags":["tutorial","MongoDB"],"categories":[],"series":["Tutorial"],"description":"MongoDB安装","content":"一、Docker  拉取镜像  1  docker pull mongo   启动容器  1 2  docker run -it -p 22000:27017 mongo   连接 mongodb://[username:][password@]ip地址:port/[database] "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/","title":"Posts","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/series/","title":"Series","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/","title":"Tags","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/series/tutorial/","title":"Tutorial","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/tutorial/","title":"tutorial","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/syntax/","title":"MongoDB语法","tags":["tutorial","MongoDB"],"categories":[],"series":["Tutorial"],"description":"MongoDB语法","content":"一、语法 1、查询 2、修改 db.some_collection.update( \u0026lt;query\u0026gt;, \u0026lt;update\u0026gt;, \u0026lt;options\u0026gt; ) 3、删除 4、添加 db.some_collection.insert([document]) 5、其它 show dbs; use some_db; // 查询当前数据库 db; // 删除数据库 some_db.dropDatabase(); // 创建集合 db.createCollection(name, options) // 删除集合 db.some_collection.drop() 与SQL的术语区别    SQL术语 MongoDB术语 说明     database database 数据库   table collection 表/集合   row document 数据行/文档   column field 字段/域   index index 索引   table join     primary key primary key 主键    "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/ssi/","title":"ssi","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/ssi/","title":"ssi","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8C%85%E5%90%AB%E6%8A%80%E6%9C%AF/","title":"服务端包含技术","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/ssi/","title":"服务端包含技术-ssi","tags":["tutorial","ssi","服务端包含技术"],"categories":[],"series":["Tutorial"],"description":"服务端包含技术ssi","content":"服务端包含技术-ssi(Server Side Include) 1、包含 1  \u0026lt;!--#include virtual=\u0026#34;/include/header.html\u0026#34;--\u0026gt;   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/series/combat/","title":"Combat","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/combat/","title":"combat","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF/","title":"学成在线","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/%E5%AD%A6%E6%88%90%E5%9C%A8%E7%BA%BF/","title":"学成在线","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/xuechengzaixian/day01/","title":"学成在线Day01","tags":["combat","学成在线"],"categories":[],"series":["Combat"],"description":"学成在线Day01","content":"一、搭建门户工程  IDEA打开xc-ui-pc-static-portal项目  二、搭建后台服务功能   创建xc-edu-service\n  IDEA打开，设置环境\n  模块说明\n parent工程，提供依赖管理 common工程，提供各层封装 model工程，提供统一的模型类管理 utils工程，提供所使用的工具类 api工程，统一管理本项目的接口    "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/nginx/","title":"Nginx","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/nginx/","title":"Nginx","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/nginx/install/","title":"Nginx-安装","tags":["tutorial","Nginx"],"categories":[],"series":["Tutorial"],"description":"安装Nginx","content":"Linux 自定义编译安装 一、Centos  安装依赖  1  yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel   下载nginx安装包  1  wget http://nginx.org/download/nginx-1.17.8.tar.gz   解压安装压缩包  1  tar -xvf nginx-1.17.8.tar.gz   配置  1 2 3 4 5 6 7 8  ./configure \\  --with-openssl=../openssl-1.0.2s \\  --with-pcre=../pcre-8.43 \\  --with-zlib=../zlib-1.2.11 \\  --with-pcre-jit --user=admin \\  --prefix=/home/admin/nginx \\  --with-http_ssl_module \\  --with-http_v2_module    参数说明\n    参数 描述     --prefix Nginx安装目录，以及有其他配置脚本选项的路径设置的所有相对路径的基本位置。默认值/usr/local/nginx   --sbin-path Nginx二进制执行文件的名称，默认值:\u0026lt;prefix\u0026gt;/sbin/nginx   --conf-path Nginx配置文件的名称。但是，您可以通过在nginx命令行上使用选项指定其他文件来始终在启动时覆盖此值。默认值：\u0026lt;prefix\u0026gt; conf / nginx.conf-c \u0026lt;FILENAME\u0026gt;   --pid-path nginx.pid文件的名称，用于存储nginx主进程的进程ID 。安装后，可以使用Nginx配置文件中的pid指令更改文件名的路径。默认值：\u0026lt;prefix\u0026gt; /logs/nginx.pid   --error-log-path error，warn和诊断数据的日志文件的名称。安装后，可以使用Nginx配置文件中的error_log指令更改文件名。默认值：\u0026lt;prefix\u0026gt; /logs/error.log   --http-log-path HTTP服务器请求的主日志文件的名称。安装后，始终可以使用Nginx配置文件中的access_log指令更改文件名。默认值:\u0026lt;prefix\u0026gt; /logs/access.log   --user Nginx运行进程的拥有者。安装后，可以使用Nginx配置文件中的user指令更改名称。默认：nobody   --group nginx运行进程的拥有者用户组。安装后，可以使用NGINX配置文件中的user指令更改名称。默认值：\u0026ndash;user选项设置的值   --with-pcre PCRE库源代码的路径，这是位置指令和Rewrite模块中正则表达式支持所必需的   --with-pcre-jit 使用“即时编译”支持（pcre_jit指令）构建PCRE库   --with-zlib zlib库的源代码路径，Gzip模块需要该路径   --with-http_ssl_modul 启用HTTPS支持   --with-http_v2_module 开启 HTTP/2请求支持        编译  1  make   安装  1  make install   分配权限（Optinal）  1 2  sudo chown root nginx sudo chmod u+s nginx   二、Debian（Ubuntu、Deepin）  安装依赖  1  sudo apt-get -y gcc zlib zlib-devel pcre-devel openssl openssl-devel    同CentOS\n "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/mysql/","title":"MySQL","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/mysql/","title":"MySQL","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/mysql/install/","title":"MySQL-安装","tags":["tutorial","MySQL"],"categories":[],"series":["Tutorial"],"description":"安装MySQL","content":"Docker 1  docker run -i -p 20000:3306 -e MYSQL_ROOT_PASSWORD=jcx120708 -v /appdata/docker/mysql/data:/var/lib/mysql:rw -v /appdata/docker/mysql/log:/var/log/mysql:rw -v /etc/localtime:/etc/localtime:ro --name mysql_server --restart=always -d mysql   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/docker/","title":"Docker","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/zookeeper/cluster/bydocker/","title":"Docker搭建Zookeeper集群","tags":["tutorial","Zookeeper","Docker"],"categories":[],"series":["Tutorial"],"description":"通过Docker搭建Zookeeper集群","content":"环境  系统: CentOS7 IP: 172.16.82.168 Docker: Docker version 19.03.5, build 633a0ea Zookeeper:  搭建步骤 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  mkdir -p /appdata/docker/zookeeper/node1 mkdir -p /appdata/docker/zookeeper/node2 mkdir -p /appdata/docker/zookeeper/node3 # 设置临时变量 machine_ip=172.16.82.128 # node1 docker run -d -p 22181:2181 -p 22182:2888 -p 22183:3888 --name zookeeper_node1 --restart always \\ -v /appdata/docker/zookeeper/node1/volume/data:/data \\ -v /appdata/docker/zookeeper/node1/volume/datalog:/datalog \\ -e \u0026#34;TZ=Asia/Shanghai\u0026#34; \\ -e \u0026#34;ZOO_MY_ID=1\u0026#34; \\ -e \u0026#34;ZOO_SERVERS=server.1=0.0.0.0:2888:3888 server.2=172.16.82.128:22185:22186 server.3=172.16.82.128:22188:22189\u0026#34; zookeeper # node2 docker run -d -p 22184:2181 -p 22185:2888 -p 22186:3888 --name zookeeper_node2 --restart always -v /appdata/docker/zookeeper/node2/volume/data:/data -v /appdata/docker/zookeeper/node2/volume/datalog:/datalog -e \u0026#34;TZ=Asia/Shanghai\u0026#34; -e \u0026#34;ZOO_MY_ID=2\u0026#34; -e \u0026#34;ZOO_SERVERS=server.1=172.16.82.128:22182:22183 server.2=0.0.0.0:2888:3888 server.3=172.16.82.128:22188:22189\u0026#34; zookeeper # node3 docker run -d -p 22187:2181 -p 22188:2888 -p 22189:3888 --name zookeeper_node3 --restart always -v /appdata/docker/zookeeper/node3/volume/data:/data -v /appdata/docker/zookeeper/node3/volume/datalog:/datalog -e \u0026#34;TZ=Asia/Shanghai\u0026#34; -e \u0026#34;ZOO_MY_ID=3\u0026#34; -e \u0026#34;ZOO_SERVERS=server.1=172.16.82.128:22182:22183 server.2=172.16.82.128:22185:22186 server.3=0.0.0.0:2888:3888\u0026#34; zookeeper   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/zookeeper/","title":"Zookeeper","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/zookeeper/","title":"Zookeeper","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/docker/","title":"Docker","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/docker/command/","title":"Docker-命令","tags":["tutorial","Docker"],"categories":[],"series":["Tutorial"],"description":"Docker命令","content":"Docker命令  docker -v docker version docker \u0026ndash;version docker pull docker images docker ps  -a   docker run docker search docker start docker stop docker rm   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/docker/install/","title":"Docker-安装","tags":["tutorial","Docker"],"categories":[],"series":["Tutorial"],"description":"安装Docker","content":"CentOS7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  yum update yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo yum list docker-ce --showduplicates | sort -r yum install docker-ce[-版本号] # 配置镜像加速器 # https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors mkdir -p /etc/docker tee /etc/docker/daemon.json \u0026lt;\u0026lt;-\u0026#39;EOF\u0026#39; { \u0026#34;registry-mirrors\u0026#34;: [\u0026#34;输入你自己控制台此处的地址\u0026#34;] } EOF systemctl daemon-reload systemctl start docker systemctl enable docker   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/java/","title":"Java","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/java/","title":"Java","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/","title":"技术选型","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E9%9D%92%E6%A9%99%E5%95%86%E5%9F%8E/","title":"青橙商城","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/qingchengmall/tech/","title":"青橙商城-技术选型","tags":["combat","Java","青橙商城","技术选型"],"categories":[],"series":["Combat"],"description":"青橙商城-技术选型","content":"技术选型  主要框架技术-SSM+Dubbo 网站后台-Vue + ElementUI 消息中间件技术：RabbitMQ 搜索中间件技术：Elasticsearch 缓存中间件：Redis 报表插件：Echarts 安全框架：SpringSecurity 单点登录中间件：CAS  "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/","title":"数据库设计","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/qingchengmall/database/design/","title":"青橙商城-数据库设计","tags":["combat","Java","青橙商城","数据库设计"],"categories":[],"series":["Combat"],"description":"青橙商城-数据库设计","content":"青橙商城数据库设计  商品库  qingcheng_goods   订单库  qingcheng_order   基础设置库  qingcheng_config   运营库  qingcheng_business   用户库  qingcheng_user   系统库  qingcheng_system   支付库  qingcheng_pay   短信库  qingcheng_sms    "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/java/base/lock/","title":"Java 同步锁","tags":["tutorial","Java","Lock","同步锁"],"categories":[],"series":["Tutorial"],"description":"Java 同步锁（Lock、ReadWriteLock）","content":"Java同步锁  从Java5开始，Java提供功能更强大的线程同步机制——Lock\n Lock提供比synchronized更广泛的锁定操作 Lock允许实现更灵活的结构，支持多个相关的Condition对象 Java提供两个根类——Lock、ReadWriteLock 使用Lock与使用同步方法相似，只是使用Lock是显式使用Lock对象作为同步锁，而同步方法为隐式使用当前对象作为同步监视器   Lock 控制多个线程对共享资源的访问\n lock() lockInterruptibly() tryLock() tryLock(long var1, TimeUnit var3) unlock() newCondition()  实现类——ReentrantLock 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  class RentrantLockDemo { private final ReentrantLock lock = new ReentrantLock(); public void lockOpt(){ // 加锁  lock.lock() try{ // operation  }catch(Exception e){ }finaly{ // 解锁  lock.unlock() } } }   ReadWriteLock 对共享资源的并发访问\n readLock() writeLock()  实现类——ReentrantReadWriteLock 为读写操作提供了三种操作模式\n Writing ReadingOptimistic Reading  Java8新增的StampedLock 在大多数情况下可以替代传统的ReentrantReadWriteLock\n"},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/lock/","title":"Lock","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E5%90%8C%E6%AD%A5%E9%94%81/","title":"同步锁","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/go/","title":"Go","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/hugo/","title":"Hugo","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/categories/hugo/","title":"Hugo","tags":[],"categories":[],"series":[],"description":"","content":""},{"uri":"https://cutu-open.github.io/cutu-blog/zh/posts/hugo/hugo/","title":"Hugo","tags":["tutorial","Hugo","Go","静态页面博客"],"categories":[],"series":["Tutorial"],"description":"Hugo基础语法","content":"Hugo指南 文件结构 Archetypes hugo new 创建post时的模板文件位置。如果没有文件，则去主题中查找\n 例子  1  hugo new posts/my-first-post.md   上面的命令会创建一个文件 content/posts/my-first-post.md ，使用的模板为以下地址中检索到的第一个\n archetypes/posts.md archetypes/default.md themes/my-theme/archetypes/posts.md themes/my-theme/archetypes/default.md  1  hugo server   "},{"uri":"https://cutu-open.github.io/cutu-blog/zh/tags/%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8D%9A%E5%AE%A2/","title":"静态页面博客","tags":[],"categories":[],"series":[],"description":"","content":""}]