<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorial on AaronJiang</title><link>https://cutu-open.github.io/cutu-blog/zh/series/tutorial/</link><description>Recent content in Tutorial on AaronJiang</description><generator>Hugo -- gohugo.io</generator><language>zh</language><managingEditor>jcx1327994105@gmail.com (AaronJiang)</managingEditor><webMaster>jcx1327994105@gmail.com (AaronJiang)</webMaster><copyright>©{year}, All Rights Reserved</copyright><lastBuildDate>Sun, 09 Feb 2020 23:15:06 +0800</lastBuildDate><atom:link href="https://cutu-open.github.io/cutu-blog/zh/series/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>MongoDB安装</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/install/</link><pubDate>Sun, 09 Feb 2020 23:15:06 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/install/</guid><description>一、Docker 拉取镜像 1 docker pull mongo 启动容器 1 2 docker run -it -p 22000:27017 mongo 连接 mongodb://[username:][password@]ip地址:por</description></item><item><title>MongoDB语法</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/syntax/</link><pubDate>Sun, 09 Feb 2020 23:09:06 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/mongodb/syntax/</guid><description>一、语法 1、查询 2、修改 db.some_collection.update( &amp;lt;query&amp;gt;, &amp;lt;update&amp;gt;, &amp;lt;options&amp;gt; ) 3、删除 4、添加 db.some_collection.insert([document]) 5、其它 show dbs; use some_db; // 查询当前数据库 db; // 删除数据库 some_db.dropDatabase(); // 创建集合 db.createCollection(name, options) // 删除集合 db.some_collection.drop() 与SQL的术语</description></item><item><title>服务端包含技术-ssi</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/ssi/</link><pubDate>Sun, 09 Feb 2020 20:57:48 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/ssi/</guid><description>服务端包含技术-ssi(Server Side Include) 1、包含 1 &amp;lt;!--#include virtual=&amp;#34;/include/header.html&amp;#34;--&amp;gt;</description></item><item><title>Nginx-安装</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/nginx/install/</link><pubDate>Sat, 08 Feb 2020 22:08:00 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/nginx/install/</guid><description>Linux 自定义编译安装 一、Centos 安装依赖 1 yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel 下载nginx安装包 1 wget http://nginx.org/download/nginx-1.17.8.tar.gz 解压安装压缩包 1 tar -xvf nginx-1.17.8.tar.gz 配置 1 2 3 4 5 6 7 8 ./configure \ --with-openssl=../openssl-1.0.2s \ --with-pcre=../pcre-8.43 \</description></item><item><title>MySQL-安装</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/mysql/install/</link><pubDate>Thu, 06 Feb 2020 23:54:31 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/mysql/install/</guid><description>Docker 1 docker run -i -p 20000:3306 -e MYSQL_ROOT_PASSWORD=jcx120708 -v /appdata/docker/mysql/data:/var/lib/mysql:rw -v /appdata/docker/mysql/log:/var/log/mysql:rw -v /etc/localtime:/etc/localtime:ro --name mysql_server --restart=always -d mysql</description></item><item><title>Docker搭建Zookeeper集群</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/zookeeper/cluster/bydocker/</link><pubDate>Thu, 06 Feb 2020 17:40:02 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/zookeeper/cluster/bydocker/</guid><description>环境 系统: CentOS7 IP: 172.16.82.168 Docker: Docker version 19.03.5, build 633a0ea Zookeeper: 搭建步骤 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 mkdir -p /appdata/docker/zookeeper/node1 mkdir -p /appdata/docker/zookeeper/node2 mkdir -p /appdata/docker/zookeeper/node3 # 设置临时变量 machine_ip=172.16.82.128 # node1 docker run -d -p 22181:2181 -p 22182:2888 -p 22183:3888 --name zookeeper_node1 --restart always \ -v /appdata/docker/zookeeper/node1/volume/data:/data \</description></item><item><title>Docker-命令</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/docker/command/</link><pubDate>Thu, 06 Feb 2020 17:27:58 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/docker/command/</guid><description>Docker命令 docker -v docker version docker &amp;ndash;version docker pull docker images docker ps -a docker run docker search docker start docker stop docker rm</description></item><item><title>Docker-安装</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/docker/install/</link><pubDate>Thu, 06 Feb 2020 12:22:25 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/docker/install/</guid><description>CentOS7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 yum update yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo yum list docker-ce --showduplicates | sort -r yum install docker-ce[-版本号] # 配置镜像加速器 #</description></item><item><title>Java 同步锁</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/java/base/lock/</link><pubDate>Thu, 30 Jan 2020 10:11:14 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/java/base/lock/</guid><description>Java同步锁 从Java5开始，Java提供功能更强大的线程同步机制——Lock Lock提供比synchronized更广泛的锁定操作 Loc</description></item><item><title>Hugo</title><link>https://cutu-open.github.io/cutu-blog/zh/posts/hugo/hugo/</link><pubDate>Sun, 19 Jan 2020 14:43:26 +0800</pubDate><author>jcx1327994105@gmail.com (AaronJiang)</author><guid>https://cutu-open.github.io/cutu-blog/zh/posts/hugo/hugo/</guid><description>Hugo指南 文件结构 Archetypes hugo new 创建post时的模板文件位置。如果没有文件，则去主题中查找 例子 1 hugo new posts/my-first-post.md 上面的命令会创建一个文件 content/posts/my-first-post.md ，使用的模板为以下</description></item></channel></rss>